// hasta la victoria siempre
// Joy Bangla!


#include <bits/stdc++.h>

using namespace std;

#define pii pair<int , int >
#define pLL pair<LL,LL>
#define psi pair<string, int>
#define ff first
#define ss second

#define LL long long 
#define uLL unsigned long long

#define vi vector<int > 
#define vc vector<char > 
#define vpii vector <pii>
#define vpsi vector<psi>
#define vd vector <double >
#define vb vector <bool >
#define vs vector <string >
#define vLL vector <LL >
#define pb push_back
#define sz size()


#define mii map<int,int>
#define mdd map<double,double>
#define msi map<string,int>
#define mis map<int , string> 
#define mLL map<LL,LL>
#define mLi map<LL,int>
#define miL map<int,LL>
#define mci map<char,int>

#define pq priority_queue
#define maxN 100005
#define maxX **
#define maxY ***
#define maxx *****
#define mod 100000000

#define SET(a,n) memset(a,n,sizeof(a));

#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()

// loops 
#define loop(i,a,n) for(int i = a ; i < n ; i++ )
#define rloop(i,a,n) for(int i = a ; i > n ; i-- )
#define fasterIO ios::sync_with_stdio(0)


int value[109];
vi graph[109];
int ans , idx ;

void bfs(){
	int visited[109];
	SET(visited,0);
	visited[0] = 1;
	queue<int> q;
	q.push(0);
	idx = 0 ;
	ans = value[0];
	
	while(!q.empty()){
		int node = q.front();q.pop();
		int siz = graph[node].sz;
		int maxi = -1;
		for(int i = 0 ; i < siz ; i++){
			int vertex = graph[node][i];
			if(!visited[vertex] && maxi < value[vertex]){
				maxi = value[vertex];
				idx = vertex;
			}
		}	
		if(maxi != -1){
			visited[idx] = 1;
			ans += maxi;
			q.push(idx);
		}
	}
	
}

int main()
{

	fasterIO;
	
	int tc , kase = 0;
	
	cin >> tc;  
	
	while(tc--){
		
		int n , m ;
		
		SET(value,0);
		loop(i,0,102) graph[i].clear();
		
		cin >> n >> m ;
		
		loop(i,0,n) cin >> value[i];
		
		loop(i,0,m){
			int u , v;
			cin >> u >> v;
			graph[u].pb(v);
		}
		
		bfs();
		++kase;
		cout << "Case "<< kase << ": ";
		
		cout << ans << " " << idx << "\n";
	}
	
	return 0;
}

















