// hasta la victoria siempre

#include <bits/stdc++.h>

using namespace std;

#define pii pair<int , int >
#define pLL pair<LL,LL>
#define psi pair<string, int>
#define ff first
#define ss second

#define LL long long 
#define uLL unsigned long long

#define vi vector<int > 
#define vc vector<char > 
#define vpii vector <pii>
#define vpsi vector<psi>
#define vd vector <double >
#define vb vector <bool >
#define vs vector <string >
#define vLL vector <LL >
#define pb push_back
#define sz size()


#define mii map<int,int>
#define mdd map<double,double>
#define msi map<string,int>
#define mis map<int , string> 
#define mLL map<LL,LL>
#define mLi map<LL,int>
#define miL map<int,LL>
#define mci map<char,int>

#define pq priority_queue
#define maxN 100005
#define maxX **
#define maxY ***
#define maxx *****
#define mod 100000000

#define SET(a,n) memset(a,n,sizeof(a));

#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()

// loops 
#define loop(i,a,n) for(int i = a ; i < n ; i++ )
#define rloop(i,a,n) for(int i = a ; i > n ; i-- )
#define fasterIO ios::sync_with_stdio(0)

bool marked[1009];

vi primes;

void siv(){
	SET(marked,1);
	marked[0] = marked[1] = 0 ;
	primes.pb(2);
	for(int i = 3 ; i * i <= 1007 ; i += 2){
		if(marked[i]){
			for(int j = i * i ; j <= 1007 ; j += i + i){
				marked[j] = 0;
			}
		}
	}

}

void loadPrime(){
	siv();
	for(int i = 3 ; i <= 1007 ; i += 2){
		if(marked[i]) primes.pb(i);
	}
}


int main()
{

	fasterIO;
	int n;
	loadPrime();
	cout << primes.sz << "\n";
	while(cin >> n){
		vi ans;
		int hi = primes.sz; 
		loop(i,0,hi){
			if(n < primes[i]){
				hi = i;
				break;
			}
		}
		
		loop(i,0,hi){
			int num = primes[i];
			while(num <= n){
				ans.pb(num);
				num *= primes[i];
			}
		}
		int siz = ans.sz;
		cout << siz << "\n";
		loop(i,0,siz){
			cout << ans[i];
			if(i == siz -1)cout << "\n";
			else cout << " ";
		}
	}
	
	
	return 0;
}




















